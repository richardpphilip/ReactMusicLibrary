{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richa\\\\PycharmProjects\\\\music_library\\\\ReactMusicLibrary\\\\philip-music\\\\src\\\\components\\\\app.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Music from './Music/Music';\nimport MusicTable from './Music/MusicTable';\nimport SongCreator from './SongCreator/SongCreator';\nimport SearchBar from './SearchBar/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allMusic: []\n    };\n\n    this.handleInput = event => {\n      debugger;\n      this.setState({\n        search: event.target.value\n      });\n      const filteredMusic = this.state.allMusic.filter(element => {\n        if (event.target.value == \"\") {\n          this.getAllMusic();\n          element = this.state.allMusic;\n          return element;\n        }\n\n        return element.title.includes(this.state.search);\n      });\n      this.setState({\n        allMusic: filteredMusic\n      });\n    };\n\n    this.getAllMusic = this.getAllMusic.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\");\n    this.getAllMusic();\n  }\n\n  async getAllMusic() {\n    let response = await axios.get('http://127.0.0.1:8000/music/');\n    this.setState({\n      allMusic: response.data\n    });\n  }\n\n  async addNewSong(song) {\n    await axios.post('http://127.0.0.1:8000/music/', song);\n    this.getAllMusic();\n  }\n\n  mapMusic() {\n    console.log(\"music state\", this.state);\n    return this.state.allMusic.map(music => /*#__PURE__*/_jsxDEV(Music, {\n      music: music,\n      deleteMusic: songId => this.deleteMusic(songId)\n    }, music.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  }\n\n  async deleteMusic(songId) {\n    console.log(\"DELETE\", songId);\n    await axios.delete(`http://127.0.0.1:8000/music/${songId}/`);\n    this.getAllMusic();\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MusicTable, {\n        mapMusic: () => this.mapMusic()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SongCreator, {\n        addNewSong: this.addNewSong.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        handleInput: this.handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/richa/PycharmProjects/music_library/ReactMusicLibrary/philip-music/src/components/app.jsx"],"names":["React","Component","axios","Music","MusicTable","SongCreator","SearchBar","App","constructor","state","allMusic","handleInput","event","setState","search","target","value","filteredMusic","filter","element","getAllMusic","title","includes","bind","componentDidMount","console","log","response","get","data","addNewSong","song","post","mapMusic","map","music","songId","deleteMusic","id","delete","render"],"mappings":"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","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios'\r\nimport Music from './Music/Music';\r\nimport MusicTable from './Music/MusicTable';\r\nimport SongCreator from './SongCreator/SongCreator'\r\nimport SearchBar from './SearchBar/SearchBar';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.getAllMusic = this.getAllMusic.bind(this);\r\n    }\r\n    state = {\r\n        allMusic: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"component did mount\");\r\n    this.getAllMusic();\r\n   \r\n  }\r\n\r\n\r\n  async getAllMusic(){\r\n    let response = await axios.get('http://127.0.0.1:8000/music/');\r\n    this.setState({\r\n      allMusic: response.data\r\n    })\r\n  }\r\n\r\n   async addNewSong(song){\r\n    await axios.post('http://127.0.0.1:8000/music/', song)\r\n    this.getAllMusic();\r\n  }\r\n\r\n  mapMusic(){\r\n    console.log(\"music state\", this.state);\r\n    return this.state.allMusic.map(music =>\r\n      <Music \r\n        key={music.id}\r\n        music={music}\r\n        deleteMusic = {(songId) => this.deleteMusic(songId)}\r\n      />\r\n    )\r\n  }\r\n\r\nhandleInput = (event) => {\r\ndebugger;\r\nthis.setState({search: event.target.value});\r\nconst filteredMusic = this.state.allMusic.filter(element => {\r\nif(event.target.value == \"\"){\r\n  this.getAllMusic();\r\n  element = this.state.allMusic\r\n  return element\r\n}\r\nreturn element.title.includes(this.state.search);\r\n});\r\nthis.setState({\r\n  allMusic : filteredMusic\r\n})\r\n\r\n  }\r\n\r\n\r\n  async deleteMusic(songId){\r\n      console.log(\"DELETE\", songId);\r\n      await axios.delete(`http://127.0.0.1:8000/music/${songId}/`);\r\n      this.getAllMusic();\r\n  }\r\n\r\n  render(){\r\n    console.log(\"this.state\", this.state);\r\n    return(\r\n    <div>\r\n        <MusicTable mapMusic= {() => this.mapMusic()}/>\r\n        <SongCreator addNewSong= {this.addNewSong.bind(this)}/>\r\n        <SearchBar handleInput= {this.handleInput} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}